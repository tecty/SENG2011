# Generated by Django 2.1 on 2018-09-20 12:08

from django.db import migrations

def add_params(apps, schema_editor):
    Parameter = apps.get_model('whip','Parameter')

    # Parameter for Age profolio 
    Parameter.objects.create(key ="Age Profile",value="0-10")
    Parameter.objects.create(key ="Age Profile",value="10-18")
    Parameter.objects.create(key ="Age Profile",value="18-30")
    Parameter.objects.create(key ="Age Profile",value="30-40")
    Parameter.objects.create(key ="Age Profile",value="40-50")
    Parameter.objects.create(key ="Age Profile",value="50-60")
    Parameter.objects.create(key ="Age Profile",value="60-80")
    Parameter.objects.create(key ="Age Profile",value="80-100")


    # parameter of Event type  
    # From https://www.listchallenges.com/parties
    Parameter.objects.create(key ="Event Type",value="Tea Party")
    Parameter.objects.create(key ="Event Type",value="Dinner Party")
    Parameter.objects.create(key ="Event Type",value="Wine Tasting Party")
    Parameter.objects.create(key ="Event Type",value="Bachelor Party")
    Parameter.objects.create(key ="Event Type",value="Pizza Party")

    # Food quality
    Parameter.objects.create(key ="Food Quality",value="Casual")
    Parameter.objects.create(key ="Food Quality",value="Superb")

    # Special Diet
    # From https://emmafogt.com/what-is-a-special-diet/
    Parameter.objects.create(key = "Special Diet", value="Liquid Diets")
    Parameter.objects.create(key = "Special Diet", value="Soft Diets")
    Parameter.objects.create(key = "Special Diet", value="Diabetic Diets")
    Parameter.objects.create(key = "Special Diet", value="Low-Calorie Diets")
    Parameter.objects.create(key = "Special Diet", value="High-Calorie Diets")
    Parameter.objects.create(key = "Special Diet", value="Low-Cholesterol Diets")
    Parameter.objects.create(key = "Special Diet", value="Low-Sodium Diets")
    Parameter.objects.create(key = "Special Diet", value="High-Protein Diets")
    Parameter.objects.create(key = "Special Diet", value="Low-Protein Diets")
    Parameter.objects.create(key = "Special Diet", value="Low-Residue Diets")


    # Religious Restriction
    # From http://www.webster.edu/specialevents/planning/food-information.html
    Parameter.objects.create(key = "Religious Restriction", value="Vegan")
    Parameter.objects.create(key = "Religious Restriction", value="Ovo-Vegetarian")
    Parameter.objects.create(key = "Religious Restriction", value="Lacto-Vegetarian")
    Parameter.objects.create(key = "Religious Restriction", value="Lacto-Ovo Vegetarians")
    Parameter.objects.create(key = "Religious Restriction", value="Pescetarians")

    # Food Allergies
    # From http://www.webster.edu/specialevents/planning/food-information.html
    Parameter.objects.create(key = "Peanut Allergic", value="True")
    Parameter.objects.create(key = "Peanut Allergic", value="False")
    Parameter.objects.create(key = "Milk Allergic", value="True")
    Parameter.objects.create(key = "Milk Allergic", value="False")
    Parameter.objects.create(key = "Egg Allergic", value="True")
    Parameter.objects.create(key = "Egg Allergic", value="False")
    Parameter.objects.create(key = "Wheat Allergic", value="True")
    Parameter.objects.create(key = "Wheat Allergic", value="False")
    Parameter.objects.create(key = "Soy Allergic", value="True")
    Parameter.objects.create(key = "Soy Allergic", value="False")
    Parameter.objects.create(key = "Fish Allergic", value="True")
    Parameter.objects.create(key = "Fish Allergic", value="False")
    Parameter.objects.create(key = "Shellfish Allergic", value="True")
    Parameter.objects.create(key = "Shellfish Allergic", value="False")



    # provision of alcohol
    Parameter.objects.create(key = "Provision of Alcohol", value="False")
    Parameter.objects.create(key = "Provision of Alcohol", value="Wine")
    Parameter.objects.create(key = "Provision of Alcohol", value="Wine & Beer")
    Parameter.objects.create(key = "Provision of Alcohol", value="Wine & Champagne")
    Parameter.objects.create(key = "Provision of Alcohol", value="Wine & Beer & Champagne")
    Parameter.objects.create(key = "Provision of Alcohol", value="Beer")
    Parameter.objects.create(key = "Provision of Alcohol", value="Beer & Champagne")
    Parameter.objects.create(key = "Provision of Alcohol", value="Champagne")

    # kitchen size
    Parameter.objects.create(key = "Kitchen Size", value="Large")
    Parameter.objects.create(key = "Kitchen Size", value="Medium")
    Parameter.objects.create(key = "Kitchen Size", value="Small")
    Parameter.objects.create(key = "Kitchen Size", value="None")
    # Parameter.objects.create(key = "Kitchen Size", value="Outdoor")

    """
    Extra Extra Parameter
    """
    # Outdoor
    Parameter.objects.create(key = "Outdoor", value="True")
    Parameter.objects.create(key = "Outdoor", value="False")

    # crockery
    Parameter.objects.create(key = "Crokery Provided", value="True")
    Parameter.objects.create(key = "Crokery Provided", value="False")

    # Glasses
    Parameter.objects.create(key = "Glasses Provided", value="True")
    Parameter.objects.create(key = "Glasses Provided", value="False")

    # Cutlery 
    Parameter.objects.create(key = "Cutlery Provided", value="True")
    Parameter.objects.create(key = "Cutlery Provided", value="False")

    # Chairs
    Parameter.objects.create(key = "Chairs Provided", value="True")
    Parameter.objects.create(key = "Chairs Provided", value="False")


class Migration(migrations.Migration):

    dependencies = [
        ('whip', '0002_import_groups'),
    ]

    operations = [
        migrations.RunPython(add_params)
    ]
